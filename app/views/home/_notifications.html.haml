- notifications ||= @notifications 
- if notifications.blank?
  = "None yet."
- else
  %table.notifications
    - notifications.each do |notif|
      - next if notif.nil? || notif.subject.nil?
      %tr
        %td
          = time_ago_in_words(notif.created_at).gsub('about ','')
          ago
          
        - begin
          - case notif.subject

          - when Tag
            - tag = notif.subject
            - user = tag.user
            %td= image_tag(tag.remote_image || tag.image.url(:small), :height => '50', :style => 'border: 1px solid #444')
            %td
              = link_to tag_title(tag), url_for(notif.subject)
              -# currently no user = API, and Tag should parse application name out of the GML
              -# so just displa that. In the future we will probably have both
              - if user.nil?
                == uploaded via API #{tag.application.blank? ? '' : "from #{application_link(tag.application)}"}
              - else
                == uploaded by #{link_to(user.login, user_path(user)) rescue '(niluser)'}
        
          - when User
            - user = notif.subject            
            %td{:colspan => 3}
              = link_to user.login, user_path(user)
              signed up

          - when Visualization
            %td{:colspan => 3}
              - app = notif.subject
              = link_to notif.user.login, user_path(notif.user)
              submitted application
              = link_to app.name, visualization_path(app.name)
              == (#{app.kind})
              
          - when Favorite
            %td{:colspan => 3}
              - fave = notif.subject
              - obj = fave.object
              = link_to notif.user.login, user_path(notif.user)
              favorited
              = obj.class.to_s.downcase
              -#FIXME use tag_title -- make that part of Tag proper perhaps? hmm
              == #{link_to obj.title || "##{obj.id}", url_for(obj)}

          - else
            %td{:colspan => 3}
              %em== No support for #{notif.subject.class.to_s} notification yet.

        - rescue
          == ERROR: #{$!}